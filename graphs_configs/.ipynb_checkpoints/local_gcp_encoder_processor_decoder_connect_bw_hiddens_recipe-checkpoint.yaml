# Encoder-Processor-Decoder graph
# Note: Resulting graph will only work with a Transformer processor because there are no connections between the hidden nodes.
nodes:
  data:
    node_builder: # how to generate data node
      _target_: anemoi.graphs.nodes.ZarrDatasetNodes
      dataset: anemoi-local-gcp-sample-zarr.zarr
    #attributes:
    #  weights: anemoi.graphs.nodes.attributes.AreaWeights
    #    _target_: #anemoi.graphs.nodes.attributes.BaseWeights => TypeError("Can't instantiate abstract class BaseWeights with abstract method get_raw_values") # anemoi.graphs.nodes.attributes.UniformWeights => Results in: ValueError: Duplicate generators present.## anemoi.graphs.nodes.attributes.AreaWeights => Results in: ValueError: Duplicate generators present.
 # anemoi.graphs.nodes.weights.Area DNE
     #   norm: unit-max
  hidden:
    node_builder: # how to generate hidden node
      _target_: anemoi.graphs.nodes.ZarrDatasetNodes
      dataset: anemoi-local-gcp-sample-zarr.zarr
edges:
  # A) Encoder connections/edges: Encodes input data intolatent space via connecting data nodes w/ hidden nodes.
  - source_name: data
    target_name: hidden
    edge_builder:
      _target_: anemoi.graphs.edges.CutOffEdges # method to build edges 
      cutoff_factor: 0.7
  # B) Decoder connections/edges: Decodes latent space into the output data via connecting hidden nodes w/ data nodes 
  - source_name: hidden
    target_name: hidden
    edge_builder:
      _target_: anemoi.graphs.edges.KNNEdges # method to build edges via KNN
      num_nearest_neighbours: 3
 # C) Processor connections/edges
  - source_name: hidden
    target_name: data
    edge_builder:
      _target_: anemoi.graphs.edges.KNNEdges  # method to build edges via KNN
      num_nearest_neighbours: 3